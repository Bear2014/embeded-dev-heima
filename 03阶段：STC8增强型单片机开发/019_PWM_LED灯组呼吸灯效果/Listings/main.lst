C51 COMPILER V9.60.7.0   MAIN                                                              04/08/2025 23:15:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC8h.h"
   2          #include "lib/Config.h"
   3          #include "lib/STC8G_H_GPIO.h"
   4          #include "lib/STC8G_H_Delay.h"
   5          #include "lib/STC8G_H_NVIC.h"
   6          #include "lib/STC8G_H_Switch.h"
   7          #include "lib/STC8H_PWM.h"
   8          #include "lib/STC8G_H_UART.h"
   9          
  10          void GPIO_Config();
  11          
  12          #define LED_SW P45
  13          #define LED1    P27
  14          #define LED2    P26
  15          #define LED3    P15
  16          #define LED4    P14
  17          #define LED5    P23
  18          #define LED6    P22
  19          #define LED7    P21
  20          #define LED8    P20
  21          
  22          #define PERIOD ((MAIN_Fosc / 1000) - 1)
  23          PWMx_Duty  duty;
  24          
  25          //PWM配置
  26          void PWM_Config() {
  27   1          PWMx_InitDefine pwm_init;
  28   1        
  29   1          //配置PWM4：对应P27 P26
  30   1          pwm_init.PWM_Mode = CCMRn_PWM_MODE2;
  31   1          pwm_init.PWM_Duty = 0; //关键配置
  32   1          //pwm_init.PWM_Duty = duty.PWM4_Duty;
  33   1          pwm_init.PWM_EnoSelect = ENO4P | ENO4N; //输出通道选择[对应LED1的输出引脚]
  34   1          PWM_Configuration(PWM4,&pwm_init);
  35   1        
  36   1          //配置PWM3:对应P15 P14
  37   1          pwm_init.PWM_Mode = CCMRn_PWM_MODE2;
  38   1          pwm_init.PWM_Duty = 0; //关键配置
  39   1          pwm_init.PWM_EnoSelect = ENO3P | ENO3N;
  40   1          PWM_Configuration(PWM3,&pwm_init);
  41   1        
  42   1          //配置PWM2:对应P23 P22
  43   1          pwm_init.PWM_Mode = CCMRn_PWM_MODE2;
  44   1          pwm_init.PWM_Duty = 0; //关键配置
  45   1          pwm_init.PWM_EnoSelect = ENO2P| ENO2N;
  46   1          PWM_Configuration(PWM2,&pwm_init);
  47   1        
  48   1          //配置PWM1:对应P21 P20
  49   1          pwm_init.PWM_Mode = CCMRn_PWM_MODE2;
  50   1          pwm_init.PWM_Duty = 0; //关键配置
  51   1          pwm_init.PWM_EnoSelect = ENO1P| ENO1N;
  52   1          PWM_Configuration(PWM1,&pwm_init);
  53   1        
  54   1      
C51 COMPILER V9.60.7.0   MAIN                                                              04/08/2025 23:15:02 PAGE 2   

  55   1          //配置PWMA!!!!
  56   1          /**
  57   1           * PWM_Period：关键配置!!!!!
  58   1           * 周期时间[一个高电平和一个低电平加在一起占用的时间]，
  59   1           * 可配置范围：0~65535，CPU没有时间的概念，它的 时间概念 等同于 数数 的概念
  60   1           * 假设我们希望在以后计算比较容易，我们打算把周期设置为：1ms[时间]
  61   1           * 这个1ms代表 里面 有高电平 和 低电平的出现
  62   1           **/
  63   1          pwm_init.PWM_Period = PERIOD;
  64   1          pwm_init.PWM_DeadTime = 0; //死区发生器，0~255
  65   1          pwm_init.PWM_CEN_Enable = ENABLE; //使能计数器，ENABLE，DISABLE
  66   1          pwm_init.PWM_MainOutEnable = ENABLE; //主输出使用，ENABLE,DISABLE
  67   1          PWM_Configuration(PWMA,&pwm_init);
  68   1      
  69   1          
  70   1          //切换引脚
  71   1          PWM4_SW(PWM4_SW_P26_P27);
  72   1          PWM3_SW(PWM3_SW_P14_P15);
  73   1          PWM2_SW(PWM2_SW_P22_P23);
  74   1          PWM1_SW(PWM1_SW_P20_P21);
  75   1      
  76   1          
  77   1          //中断使能
  78   1          NVIC_PWM_Init(PWMA,DISABLE,Priority_0);
  79   1      }
  80          
  81          
  82          void main() {
  83   1        int percent = 0;
  84   1        int direction = 1;
  85   1        int duty_value = 0;
  86   1      
  87   1        
  88   1        //配置GPIO
  89   1        GPIO_Config();
  90   1      
  91   1        //打开拓展寄存器使用(pwm专用),且一定要在配置pwm之前打开！！！！！
  92   1        EAXSFR();
  93   1        
  94   1        //配置pwm
  95   1        PWM_Config();
  96   1        
  97   1        //打开全局中断
  98   1        EA = 1;
  99   1        
 100   1        LED_SW = 0;
 101   1        
 102   1        //LED1 = 0;
 103   1        
 104   1        while(1) { //此处也可以改成使用定时器来定时获取数据
 105   2      
 106   2          percent += direction;
 107   2          if(percent == 100) {
 108   3            direction = -1;
 109   3          } else if(percent == 0){
 110   3            direction = 1;
 111   3          }
 112   2          
 113   2          //更新占空比：参数1：更新哪一个通道或者哪一个组；参数2：占空比的指针变量
 114   2          duty_value = PERIOD * percent / 100; //范围0~PERIOD,此值是一直变化的: PERIOD * 百分比
 115   2          
 116   2          duty.PWM4_Duty = duty_value;
C51 COMPILER V9.60.7.0   MAIN                                                              04/08/2025 23:15:02 PAGE 3   

 117   2          duty.PWM3_Duty = duty_value;
 118   2          duty.PWM2_Duty = duty_value;
 119   2          duty.PWM1_Duty = duty_value;
 120   2          UpdatePwm(PWMA, &duty);
 121   2          
 122   2          delay_ms(25); //避免变化太快
 123   2        }
 124   1      
 125   1      }
 126          
 127          void GPIO_Config() {
 128   1        GPIO_InitTypeDef GPIO_InitTypeDef;
 129   1      
 130   1        GPIO_InitTypeDef.Mode = GPIO_OUT_PP;
 131   1        GPIO_InitTypeDef.Pin = GPIO_Pin_5;
 132   1        GPIO_Inilize(GPIO_P4,&GPIO_InitTypeDef);
 133   1        
 134   1        GPIO_InitTypeDef.Mode = GPIO_OUT_PP;
 135   1        GPIO_InitTypeDef.Pin = GPIO_Pin_7 | GPIO_Pin_6 | GPIO_Pin_3 | GPIO_Pin_2 | GPIO_Pin_1 | GPIO_Pin_0;
 136   1        GPIO_Inilize(GPIO_P2,&GPIO_InitTypeDef);
 137   1        
 138   1        GPIO_InitTypeDef.Mode = GPIO_OUT_PP;
 139   1        GPIO_InitTypeDef.Pin = GPIO_Pin_5 | GPIO_Pin_4;
 140   1        GPIO_Inilize(GPIO_P1,&GPIO_InitTypeDef);
 141   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    334    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
