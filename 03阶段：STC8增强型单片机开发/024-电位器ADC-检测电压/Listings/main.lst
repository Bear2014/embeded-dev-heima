C51 COMPILER V9.60.7.0   MAIN                                                              04/25/2025 21:44:21 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "lib/STC8G_H_GPIO.h"
   2          #include "lib/STC8G_H_Delay.h"
   3          #include "lib/STC8G_H_UART.h"
   4          #include "lib/STC8G_H_Switch.h"
   5          #include "lib/STC8G_H_ADC.h"
   6          #include "lib/STC8G_H_NVIC.h"
   7          
   8          
   9          #define P_ADC P05;
  10          
  11          void GPIO_Config();
  12          void uart_Config();
  13          void ADC_Config();
  14          
  15          
  16          void main() {
  17   1          u16 adc_value;
  18   1          float res;
  19   1      
  20   1          EA = 1;
  21   1          GPIO_Config();
  22   1        
  23   1          uart_Config();
  24   1        
  25   1          ADC_Config();
  26   1          
  27   1          printf("start...\n");
  28   1        
  29   1        
  30   1          while(1) {
  31   2            
  32   2            //获取P05引脚的测量值
  33   2            adc_value = Get_ADCResult(ADC_CH13);
  34   2            printf("adc_value=%d\n",adc_value);
  35   2            
  36   2            res = adc_value * 2.5 / 4096;
  37   2            printf("res=%.2fv\n", res);
  38   2            
  39   2            
  40   2            delay_ms(250);
  41   2            delay_ms(250);
  42   2            delay_ms(250);
  43   2            delay_ms(250);
  44   2          }
  45   1        
  46   1      }
  47          
  48          
  49          
  50          //配置P05
  51          void GPIO_Config() {
  52   1        GPIO_InitTypeDef gpio_init;
  53   1        gpio_init.Mode = GPIO_HighZ; //设置为高阻输出
  54   1        gpio_init.Pin = GPIO_Pin_5;
C51 COMPILER V9.60.7.0   MAIN                                                              04/25/2025 21:44:21 PAGE 2   

  55   1        GPIO_Inilize(GPIO_P0,&gpio_init);
  56   1      }
  57          
  58          
  59          //配置串口
  60          void uart_Config() {
  61   1          COMx_InitDefine   COMx_InitStructure;         //结构定义
  62   1      
  63   1          COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
  64   1          COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  65   1          COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率, 一般 110 ~ 115200
  66   1          COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  67   1          COMx_InitStructure.BaudRateDouble = DISABLE;      //波特率加倍, ENABLE或DISABLE
  68   1          UART_Configuration(UART1, &COMx_InitStructure);   //初始化串口1 UART1,UART2,UART3,UART4
  69   1        
  70   1          NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE\DISABLE; 优先级(低到高) Priority_0,Priority_1,
             -Priority_2,Priority_3
  71   1          
  72   1          UART1_SW(UART1_SW_P30_P31);   //UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_P43_P44
  73   1      }
  74          
  75          
  76          //配置ADC
  77          void ADC_Config(){
  78   1        ADC_InitTypeDef adc_init;
  79   1        
  80   1        adc_init.ADC_SMPduty = 31;    //ADC 模拟信号采样时间控制, 0~31（注意： SMPDUTY 一定不能设置小于 10）
  81   1        adc_init.ADC_Speed = ADC_SPEED_2X1T;      //设置 ADC 工作时钟频率 ADC_SPEED_2X1T~ADC_SPEED_2X16T
  82   1        
  83   1        //adc采集出来的数据只有12位，装这个采集数据，采用16位来装
  84   1        adc_init.ADC_AdjResult = ADC_RIGHT_JUSTIFIED; //ADC结果调整,  ADC_LEFT_JUSTIFIED,ADC_RIGHT_JUSTIFIED
  85   1        adc_init.ADC_CsSetup = 0;   //ADC 通道选择时间控制 0(默认),1
  86   1        adc_init.ADC_CsHold = 1;
  87   1        
  88   1        ADC_Inilize(&adc_init);
  89   1        
  90   1        //电源使用
  91   1        ADC_PowerControl(ENABLE);
  92   1        
  93   1        //中断使用
  94   1        NVIC_ADC_Init(DISABLE,Priority_1); //中断使能，一般不写，写了会看到不一样的结果！！！！
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    215    ----
   CONSTANT SIZE    =     35    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
